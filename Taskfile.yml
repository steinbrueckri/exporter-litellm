version: "3"

vars:
  IMAGE_NAME: litellm-exporter:local
  DOCKER_COMPOSE: docker-compose.yml

tasks:
  #############################################################################
  # Docker tasks
  #############################################################################
  build:
    desc: Build the Docker image for local development
    cmds:
      - docker build -t {{.IMAGE_NAME}} .

  stack:
    desc: Start stack to play with litellm-expoter
    cmds:
      - docker compose -f {{.DOCKER_COMPOSE}} up --build

  clean:
    desc: Remove the local Docker image
    cmds:
      - docker compose rm -f
      - docker rmi {{.IMAGE_NAME}} || true

  #############################################################################
  # UV tasks
  #############################################################################
  uv-venv:
    desc: Create or update local virtual env with uv
    run: once
    cmds:
      - uv venv

  uv-sync:
    desc: Sync dependencies from pyproject using uv
    deps: [uv-venv]
    run: once
    cmds:
      - uv sync --group dev

  uv-lock:
    desc: Update lockfile using uv
    cmds:
      - uv lock

  #############################################################################
  # Test tasks
  #############################################################################
  test:
    desc: Run tests
    deps: [uv-sync]
    cmds:
      - uv run pytest

  md-lint:
    desc: Lint Markdown files with PyMarkdown
    deps: [uv-sync]
    cmds:
      - uv run pymarkdown scan ./README.md

  py-lint:
    desc: Lint Python files with Ruff
    deps: [uv-sync]
    cmds:
      - uv run ruff check .

  lint:
    desc: Run all linters
    deps: [md-lint, py-lint]
    cmds:
      - task: md-lint
      - task: py-lint

  ci:
    desc: Run CI suite (lint, tests)
    cmds:
      - task: lint
      - task: build
      - task: test

  #############################################################################
  # Database tasks
  #############################################################################
  db-connect:
    desc: Connect to the PostgreSQL database using pgcli
    cmds:
      - pgcli postgresql://litellm:litellm@localhost:5432/litellm

  #############################################################################
  # Changelog tasks
  #############################################################################
  update-changelog:
    desc: Generate changelog from git commits
    deps: [uv-sync]
    cmds:
      - uv run generate-changelog --config .generate-changelog.yaml

  changelog-preview:
    desc: Preview changelog without writing to file
    deps: [uv-sync]
    cmds:
      - uv run generate-changelog --config .generate-changelog.yaml --output notes

  #############################################################################
  # Release tasks
  #############################################################################
  release-patch:
    desc: Create a patch release (0.1.0 → 0.1.1)
    deps: [uv-sync, ci]
    cmds:
      - task: update-changelog
      - git add CHANGELOG.md
      - uv run bump-my-version bump patch
      - git push origin main --tags

  release-minor:
    desc: Create a minor release (0.1.0 → 0.2.0)
    deps: [uv-sync, ci]
    cmds:
      - task: update-changelog
      - git add CHANGELOG.md
      - uv run bump-my-version bump minor
      - git push origin main --tags

  release-major:
    desc: Create a major release (0.1.0 → 1.0.0)
    deps: [uv-sync, ci]
    cmds:
      - task: update-changelog
      - git add CHANGELOG.md
      - uv run bump-my-version bump major
      - git push origin main --tags
